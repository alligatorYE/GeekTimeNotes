1、

public class TestDemo {
    public static void main(String args[]) throws Exception {
//        Ball[] balls = new Ball[]{
//                new Ball("辛宁", 199),
//                new Ball("想手机", 1999.99),
//                new Ball("斯伯丁", 299.99),
//                new Ball("红双喜", 99.99)};    // 定义对象数组
//        Arrays.sort(balls);
//        System.out.println(Arrays.toString(balls));
        String str = "NMJKLFSDJKLFSDJKLSDFJKLFSD" ;
        String result [] = str.split("") ;
        Arrays.sort(result);
        System.out.println(Arrays.toString(result));
    }
}

2、

package cn.mldn.demo;

import java.util.Arrays;

class Ball implements Comparable<Ball>{
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand;
        this.price = price;
    }
    @Override
    public String toString() {
        return "品牌：" + this.brand + "、价格：" + this.price + "\n" ;
    }

    @Override
    public int compareTo(Ball o) {
        if (this.price > o.price) {
            return 1 ;
        } else if (this.price < o.price) {
            return -1 ;
        } else {
            return 0 ;
        }
    }
    // setter、getter、无参构造 ... ...
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Ball[] balls = new Ball[]{
                new Ball("辛宁", 199),
                new Ball("想手机", 1999.99),
                new Ball("斯伯丁", 299.99),
                new Ball("361", 299.91),
                new Ball("红双喜", 99.99)};    // 定义对象数组
        Arrays.sort(balls);
        System.out.println(Arrays.toString(balls));
    }
}



3、
package cn.mldn.demo;

import java.util.Arrays;
import java.util.Comparator;

class Ball {
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand;
        this.price = price;
    }
    @Override
    public String toString() {
        return "品牌：" + this.brand + "、价格：" + this.price + "\n" ;
    }
    public String getBrand() {
        return brand;
    }
    public double getPrice() {
        return price;
    }
}

class BallComparator implements Comparator<Ball> {
    @Override
    public int compare(Ball o1, Ball o2) {
        if (o1.getPrice() > o2.getPrice()) {
            return 1 ;
        } else if (o1.getPrice() < o2.getPrice()) {
            return -1 ;
        } else {
            return 0;
        }
    }
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Ball[] balls = new Ball[]{
                new Ball("辛宁", 199),
                new Ball("想手机", 1999.99),
                new Ball("斯伯丁", 299.99),
                new Ball("361", 299.91),
                new Ball("红双喜", 99.99)};    // 定义对象数组
        Arrays.sort(balls,new BallComparator().reversed());
        System.out.println(Arrays.toString(balls));
    }
}


4、
package cn.mldn.demo;

import java.util.Arrays;
import java.util.Comparator;

class Ball {
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand;
        this.price = price;
    }
    @Override
    public String toString() {
        return "品牌：" + this.brand + "、价格：" + this.price + "\n" ;
    }
    public String getBrand() {
        return brand;
    }
    public double getPrice() {
        return price;
    }
}

class BallComparator implements Comparator<Ball> {
    @Override
    public int compare(Ball o1, Ball o2) {
        if (o1.getPrice() > o2.getPrice()) {
            return 1 ;
        } else if (o1.getPrice() < o2.getPrice()) {
            return -1 ;
        } else {
            return 0;
        }
    }
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Ball[] balls = new Ball[]{
                new Ball("辛宁", 199),
                new Ball("想手机", 1999.99),
                new Ball("斯伯丁", 299.99),
                new Ball("361", 299.91),
                new Ball("红双喜", 99.99)};    // 定义对象数组
        Comparator<Ball> comparator = (o1,o2)->{
            if (o1.getPrice() > o2.getPrice()) {
                return 1 ;
            } else if (o1.getPrice() < o2.getPrice()) {
                return -1 ;
            } else {
                return 0;
            }
        } ;
        Arrays.sort(balls,comparator.reversed());
        System.out.println(Arrays.toString(balls));
    }
}


