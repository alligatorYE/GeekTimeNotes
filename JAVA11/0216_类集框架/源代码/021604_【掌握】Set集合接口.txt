1、

package cn.mldn.demo;

import java.util.Set;

public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<String> all = Set.of("Hello","MLDN","Hello","MLDN") ;
        System.out.println(all);
    }
}

2、

package cn.mldn.demo;

import java.util.Set;

public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<String> all = Set.of("Hello","MLDN") ;
        System.out.println(all);
    }
}

3、

package cn.mldn.demo;

import java.util.HashSet;
import java.util.Set;

public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<String> all = new HashSet<>() ;
        all.add("Hello") ;
        all.add("Hello") ;  // 重复数据
        all.add("Hello") ;  // 重复数据
        all.add("MLDN") ;
        all.add("MLDNJava") ;
        all.add("Java") ;
        all.add("外面放假了，我们继续学习！") ;
        System.out.println(all);
    }
}

4、
package cn.mldn.demo;

import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<String> all = new TreeSet<>() ;
        all.add("B") ;
        all.add("C") ;
        all.add("C") ;  // 重复数据
        all.add("A") ;
        all.add("X") ;
        System.out.println(all);
    }
}

5、
package cn.mldn.demo;
import java.util.Set;
import java.util.TreeSet;
class Ball implements Comparable<Ball>{
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand ;
        this.price = price ;
    }
    @Override
    public String toString() {
        return "生产商：" + this.brand + "、价格：" + this.price + "\n";
    }
    @Override
    public int compareTo(Ball o) {
        if (this.price > o.price) {
            return 1 ;
        } else if (this.price < o.price) {
            return -1 ;
        } else {
            return this.brand.compareTo(o.brand);
        }
    }
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<Ball> all = new TreeSet<Ball>() ;
        all.add(new Ball("365",1.2)) ;
        all.add(new Ball("365",1.2)) ;  // 重复
        all.add(new Ball("张凝",1.2)) ;
        all.add(new Ball("辛博",1.2)) ;
        System.out.println(all);
    }
}

6、
package cn.mldn.demo;
import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;
class Ball implements Comparable<Ball>{
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand ;
        this.price = price ;
    }
    @Override
    public String toString() {
        return "生产商：" + this.brand + "、价格：" + this.price + "\n";
    }
    @Override
    public int compareTo(Ball o) {
        if (this.price > o.price) {
            return 1 ;
        } else if (this.price < o.price) {
            return -1 ;
        } else {
            return this.brand.compareTo(o.brand);
        }
    }
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<Ball> all = new HashSet<Ball>() ;
        all.add(new Ball("365",1.2)) ;
        all.add(new Ball("365",1.2)) ;  // 重复
        all.add(new Ball("张凝",1.2)) ;
        all.add(new Ball("辛博",1.2)) ;
        System.out.println(all);
    }
}

7、
package cn.mldn.demo;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
class Ball {
    private String brand ;
    private double price ;
    public Ball(String brand, double price) {
        this.brand = brand ;
        this.price = price ;
    }
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Ball ball = (Ball) o;
        return Double.compare(ball.price, price) == 0 &&
                brand.equals(ball.brand);
    }
    @Override
    public int hashCode() {
        return Objects.hash(brand, price);
    }
    @Override
    public String toString() {
        return "生产商：" + this.brand + "、价格：" + this.price + "\n";
    }
}
public class TestDemo {
    public static void main(String args[]) throws Exception {
        Set<Ball> all = new HashSet<Ball>() ;
        all.add(new Ball("365",1.2)) ;
        all.add(new Ball("365",1.2)) ;  // 重复
        all.add(new Ball("张凝",1.2)) ;
        all.add(new Ball("辛博",1.2)) ;
        System.out.println(all);
    }
}